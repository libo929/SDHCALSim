CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)

PROJECT(SDHCALSim)

# project version
SET( ${PROJECT_NAME}_VERSION_MAJOR 0 )
SET( ${PROJECT_NAME}_VERSION_MINOR 2 )
SET( ${PROJECT_NAME}_VERSION_PATCH 0 )

# Find packages
OPTION(WITH_GEANT4_UIVIS "Build example with Geant4 UI and Vis drivers" ON)
if(WITH_GEANT4_UIVIS)
  FIND_PACKAGE(Geant4 REQUIRED ui_all vis_all)
else()
  FIND_PACKAGE(Geant4 REQUIRED)
endif()

FIND_PACKAGE( ROOT REQUIRED )
FIND_PACKAGE( LCIO 2.11 REQUIRED )

FOREACH( pkg LCIO ROOT Geant4 )
	IF( ${pkg}_FOUND )
		INCLUDE_DIRECTORIES( SYSTEM ${${pkg}_INCLUDE_DIRS} )
		LINK_LIBRARIES( ${${pkg}_LIBRARIES} )
		ADD_DEFINITIONS ( ${${pkg}_DEFINITIONS} )
	ENDIF()
ENDFOREACH()

ADD_DEFINITIONS( "-Wall -ansi -pedantic -std=c++11 -Weffc++" )

INCLUDE_DIRECTORIES( ${PROJECT_SOURCE_DIR}/include )
FILE(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cpp)

SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

ADD_LIBRARY(simlib STATIC ${sources})

ADD_EXECUTABLE( SDHCALSim   ${PROJECT_SOURCE_DIR}/exec/SDHCALSim.cxx )
ADD_EXECUTABLE( SDHCALSimUI ${PROJECT_SOURCE_DIR}/exec/SDHCALSimUI.cxx )

TARGET_LINK_LIBRARIES(SDHCALSim   simlib)
TARGET_LINK_LIBRARIES(SDHCALSimUI simlib)

INSTALL(TARGETS SDHCALSim SDHCALSimUI RUNTIME DESTINATION ${PROJECT_SOURCE_DIR}/bin)
